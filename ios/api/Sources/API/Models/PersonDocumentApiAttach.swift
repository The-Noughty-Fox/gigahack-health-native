//
// PersonDocumentApiAttach.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct PersonDocumentApiAttach: Codable, JSONEncodable, Hashable {

    static let documentNameRule = StringRule(minLength: 1, maxLength: nil, pattern: nil)
    /** Original file name. If has extension, will be used to determine content type if ContentType is not specified. File name without extension becomes document name. */
    public var documentName: String
    /** Document date / time. If not specified, current date is used */
    public var documentDate: Date?
    public var documentType: PersonDocumentApiAttachDocumentType?
    public var contentType: PersonDocumentApiAttachContentType?
    /** Base64 encoded file content */
    public var content: Data

    public init(documentName: String, documentDate: Date? = nil, documentType: PersonDocumentApiAttachDocumentType? = nil, contentType: PersonDocumentApiAttachContentType? = nil, content: Data) {
        self.documentName = documentName
        self.documentDate = documentDate
        self.documentType = documentType
        self.contentType = contentType
        self.content = content
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case documentName
        case documentDate
        case documentType
        case contentType
        case content
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(documentName, forKey: .documentName)
        try container.encodeIfPresent(documentDate, forKey: .documentDate)
        try container.encodeIfPresent(documentType, forKey: .documentType)
        try container.encodeIfPresent(contentType, forKey: .contentType)
        try container.encode(content, forKey: .content)
    }
}

