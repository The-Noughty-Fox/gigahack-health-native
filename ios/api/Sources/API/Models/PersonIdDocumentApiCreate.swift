//
// PersonIdDocumentApiCreate.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct PersonIdDocumentApiCreate: Codable, JSONEncodable, Hashable {

    public var typeId: Int?
    public var number: String?
    public var issuedBy: String?
    public var issuedOn: Date?
    public var expiresOn: Date?
    public var firstName: String?
    public var lastName: String?

    public init(typeId: Int? = nil, number: String? = nil, issuedBy: String? = nil, issuedOn: Date? = nil, expiresOn: Date? = nil, firstName: String? = nil, lastName: String? = nil) {
        self.typeId = typeId
        self.number = number
        self.issuedBy = issuedBy
        self.issuedOn = issuedOn
        self.expiresOn = expiresOn
        self.firstName = firstName
        self.lastName = lastName
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case typeId
        case number
        case issuedBy
        case issuedOn
        case expiresOn
        case firstName
        case lastName
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(typeId, forKey: .typeId)
        try container.encodeIfPresent(number, forKey: .number)
        try container.encodeIfPresent(issuedBy, forKey: .issuedBy)
        try container.encodeIfPresent(issuedOn, forKey: .issuedOn)
        try container.encodeIfPresent(expiresOn, forKey: .expiresOn)
        try container.encodeIfPresent(firstName, forKey: .firstName)
        try container.encodeIfPresent(lastName, forKey: .lastName)
    }
}

