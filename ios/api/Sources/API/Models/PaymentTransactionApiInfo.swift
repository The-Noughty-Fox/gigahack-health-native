//
// PaymentTransactionApiInfo.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct PaymentTransactionApiInfo: Codable, JSONEncodable, Hashable {

    public var id: Int?
    public var paymentMethod: PaymentMethod?
    public var dateTime: Date?
    public var amount: Double?
    public var cashInAmount: Double?
    public var roundingAmount: Double?
    public var transactionNumber: String?

    public init(id: Int? = nil, paymentMethod: PaymentMethod? = nil, dateTime: Date? = nil, amount: Double? = nil, cashInAmount: Double? = nil, roundingAmount: Double? = nil, transactionNumber: String? = nil) {
        self.id = id
        self.paymentMethod = paymentMethod
        self.dateTime = dateTime
        self.amount = amount
        self.cashInAmount = cashInAmount
        self.roundingAmount = roundingAmount
        self.transactionNumber = transactionNumber
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case id
        case paymentMethod
        case dateTime
        case amount
        case cashInAmount
        case roundingAmount
        case transactionNumber
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(id, forKey: .id)
        try container.encodeIfPresent(paymentMethod, forKey: .paymentMethod)
        try container.encodeIfPresent(dateTime, forKey: .dateTime)
        try container.encodeIfPresent(amount, forKey: .amount)
        try container.encodeIfPresent(cashInAmount, forKey: .cashInAmount)
        try container.encodeIfPresent(roundingAmount, forKey: .roundingAmount)
        try container.encodeIfPresent(transactionNumber, forKey: .transactionNumber)
    }
}

