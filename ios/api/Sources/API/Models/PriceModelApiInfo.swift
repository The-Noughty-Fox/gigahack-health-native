//
// PriceModelApiInfo.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct PriceModelApiInfo: Codable, JSONEncodable, Hashable {

    public var id: Int?
    public var code: String?
    public var name: String?
    public var isDefault: Bool?
    public var payerId: Int?
    public var payerName: String?
    public var legalEntityName: String?
    public var legalEntityNationalIdentificationNumber: String?

    public init(id: Int? = nil, code: String? = nil, name: String? = nil, isDefault: Bool? = nil, payerId: Int? = nil, payerName: String? = nil, legalEntityName: String? = nil, legalEntityNationalIdentificationNumber: String? = nil) {
        self.id = id
        self.code = code
        self.name = name
        self.isDefault = isDefault
        self.payerId = payerId
        self.payerName = payerName
        self.legalEntityName = legalEntityName
        self.legalEntityNationalIdentificationNumber = legalEntityNationalIdentificationNumber
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case id
        case code
        case name
        case isDefault
        case payerId
        case payerName
        case legalEntityName
        case legalEntityNationalIdentificationNumber
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(id, forKey: .id)
        try container.encodeIfPresent(code, forKey: .code)
        try container.encodeIfPresent(name, forKey: .name)
        try container.encodeIfPresent(isDefault, forKey: .isDefault)
        try container.encodeIfPresent(payerId, forKey: .payerId)
        try container.encodeIfPresent(payerName, forKey: .payerName)
        try container.encodeIfPresent(legalEntityName, forKey: .legalEntityName)
        try container.encodeIfPresent(legalEntityNationalIdentificationNumber, forKey: .legalEntityNationalIdentificationNumber)
    }
}

