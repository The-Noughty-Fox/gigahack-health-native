//
// CreatePractitionerApiRequest.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct CreatePractitionerApiRequest: Codable, JSONEncodable, Hashable {

    /** Id of existing person resource to add practitioner role */
    public var personId: Int
    /** Principal practitioner speciality */
    public var principalSpecialityId: Int?

    public init(personId: Int, principalSpecialityId: Int? = nil) {
        self.personId = personId
        self.principalSpecialityId = principalSpecialityId
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case personId
        case principalSpecialityId
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(personId, forKey: .personId)
        try container.encodeIfPresent(principalSpecialityId, forKey: .principalSpecialityId)
    }
}

