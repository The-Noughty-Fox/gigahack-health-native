//
// PersonApiCreate.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct PersonApiCreate: Codable, JSONEncodable, Hashable {

    static let firstNameRule = StringRule(minLength: 1, maxLength: nil, pattern: nil)
    static let lastNameRule = StringRule(minLength: 1, maxLength: nil, pattern: nil)
    public var firstName: String
    public var lastName: String
    public var patronymicName: String?
    public var dateOfBirth: Date?
    public var gender: PersonGender?
    public var createAccountForDefaultOwnCompany: Bool?

    public init(firstName: String, lastName: String, patronymicName: String? = nil, dateOfBirth: Date? = nil, gender: PersonGender? = nil, createAccountForDefaultOwnCompany: Bool? = nil) {
        self.firstName = firstName
        self.lastName = lastName
        self.patronymicName = patronymicName
        self.dateOfBirth = dateOfBirth
        self.gender = gender
        self.createAccountForDefaultOwnCompany = createAccountForDefaultOwnCompany
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case firstName
        case lastName
        case patronymicName
        case dateOfBirth
        case gender
        case createAccountForDefaultOwnCompany
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(firstName, forKey: .firstName)
        try container.encode(lastName, forKey: .lastName)
        try container.encodeIfPresent(patronymicName, forKey: .patronymicName)
        try container.encodeIfPresent(dateOfBirth, forKey: .dateOfBirth)
        try container.encodeIfPresent(gender, forKey: .gender)
        try container.encodeIfPresent(createAccountForDefaultOwnCompany, forKey: .createAccountForDefaultOwnCompany)
    }
}

