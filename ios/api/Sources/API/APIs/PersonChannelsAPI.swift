//
// PersonChannelsAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

open class PersonChannelsAPI {

    /**

     - parameter personId: (path)  
     - parameter personChannelApiCreate: (body)  
     - returns: EntityIdApiInfo
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func personChannelsCreatePersonChannel(personId: Int, personChannelApiCreate: PersonChannelApiCreate) async throws -> EntityIdApiInfo {
        return try await personChannelsCreatePersonChannelWithRequestBuilder(personId: personId, personChannelApiCreate: personChannelApiCreate).execute().body
    }

    /**
     - POST /api/persons/{personId}/channels
     - API Key:
       - type: apiKey Api-Key (HEADER)
       - name: Api-Key
     - parameter personId: (path)  
     - parameter personChannelApiCreate: (body)  
     - returns: RequestBuilder<EntityIdApiInfo> 
     */
    open class func personChannelsCreatePersonChannelWithRequestBuilder(personId: Int, personChannelApiCreate: PersonChannelApiCreate) -> RequestBuilder<EntityIdApiInfo> {
        var localVariablePath = "/api/persons/{personId}/channels"
        let personIdPreEscape = "\(APIHelper.mapValueToPathItem(personId))"
        let personIdPostEscape = personIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{personId}", with: personIdPostEscape, options: .literal, range: nil)
        let localVariableURLString = APIAPI.basePath + localVariablePath
        let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: personChannelApiCreate)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            "Content-Type": "application/json",
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<EntityIdApiInfo>.Type = APIAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "POST", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**

     - parameter channelId: (path)  
     - returns: URL
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func personChannelsDeletePersonChannel(channelId: Int) async throws -> URL {
        return try await personChannelsDeletePersonChannelWithRequestBuilder(channelId: channelId).execute().body
    }

    /**
     - DELETE /api/personChannels/{channelId}
     - API Key:
       - type: apiKey Api-Key (HEADER)
       - name: Api-Key
     - parameter channelId: (path)  
     - returns: RequestBuilder<URL> 
     */
    open class func personChannelsDeletePersonChannelWithRequestBuilder(channelId: Int) -> RequestBuilder<URL> {
        var localVariablePath = "/api/personChannels/{channelId}"
        let channelIdPreEscape = "\(APIHelper.mapValueToPathItem(channelId))"
        let channelIdPostEscape = channelIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{channelId}", with: channelIdPostEscape, options: .literal, range: nil)
        let localVariableURLString = APIAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<URL>.Type = APIAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "DELETE", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**

     - parameter personId: (path)  
     - returns: [PersonChannelApiInfo]
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func personChannelsGetPersonChannels(personId: Int) async throws -> [PersonChannelApiInfo] {
        return try await personChannelsGetPersonChannelsWithRequestBuilder(personId: personId).execute().body
    }

    /**
     - GET /api/persons/{personId}/channels
     - API Key:
       - type: apiKey Api-Key (HEADER)
       - name: Api-Key
     - parameter personId: (path)  
     - returns: RequestBuilder<[PersonChannelApiInfo]> 
     */
    open class func personChannelsGetPersonChannelsWithRequestBuilder(personId: Int) -> RequestBuilder<[PersonChannelApiInfo]> {
        var localVariablePath = "/api/persons/{personId}/channels"
        let personIdPreEscape = "\(APIHelper.mapValueToPathItem(personId))"
        let personIdPostEscape = personIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{personId}", with: personIdPostEscape, options: .literal, range: nil)
        let localVariableURLString = APIAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<[PersonChannelApiInfo]>.Type = APIAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**

     - parameter channelId: (path)  
     - parameter personChannelApiPatch: (body)  
     - returns: URL
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func personChannelsPersonChannelPatch(channelId: Int, personChannelApiPatch: PersonChannelApiPatch) async throws -> URL {
        return try await personChannelsPersonChannelPatchWithRequestBuilder(channelId: channelId, personChannelApiPatch: personChannelApiPatch).execute().body
    }

    /**
     - PATCH /api/personChannels/{channelId}
     - API Key:
       - type: apiKey Api-Key (HEADER)
       - name: Api-Key
     - parameter channelId: (path)  
     - parameter personChannelApiPatch: (body)  
     - returns: RequestBuilder<URL> 
     */
    open class func personChannelsPersonChannelPatchWithRequestBuilder(channelId: Int, personChannelApiPatch: PersonChannelApiPatch) -> RequestBuilder<URL> {
        var localVariablePath = "/api/personChannels/{channelId}"
        let channelIdPreEscape = "\(APIHelper.mapValueToPathItem(channelId))"
        let channelIdPostEscape = channelIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{channelId}", with: channelIdPostEscape, options: .literal, range: nil)
        let localVariableURLString = APIAPI.basePath + localVariablePath
        let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: personChannelApiPatch)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            "Content-Type": "application/json",
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<URL>.Type = APIAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "PATCH", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }
}
