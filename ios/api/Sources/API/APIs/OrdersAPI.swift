//
// OrdersAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

open class OrdersAPI {

    /**
     Create new order
     
     - parameter orderApiCreate: (body)  
     - returns: EntityIdApiInfo
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func orderCreateNewOrder(orderApiCreate: OrderApiCreate) async throws -> EntityIdApiInfo {
        return try await orderCreateNewOrderWithRequestBuilder(orderApiCreate: orderApiCreate).execute().body
    }

    /**
     Create new order
     - POST /api/orders
     - API Key:
       - type: apiKey Api-Key (HEADER)
       - name: Api-Key
     - parameter orderApiCreate: (body)  
     - returns: RequestBuilder<EntityIdApiInfo> 
     */
    open class func orderCreateNewOrderWithRequestBuilder(orderApiCreate: OrderApiCreate) -> RequestBuilder<EntityIdApiInfo> {
        let localVariablePath = "/api/orders"
        let localVariableURLString = APIAPI.basePath + localVariablePath
        let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: orderApiCreate)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            "Content-Type": "application/json",
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<EntityIdApiInfo>.Type = APIAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "POST", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**
     Get order by id
     
     - parameter orderId: (path)  
     - returns: OrderApiInfo
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func orderGetOrder(orderId: Int) async throws -> OrderApiInfo {
        return try await orderGetOrderWithRequestBuilder(orderId: orderId).execute().body
    }

    /**
     Get order by id
     - GET /api/orders/{orderId}
     - API Key:
       - type: apiKey Api-Key (HEADER)
       - name: Api-Key
     - parameter orderId: (path)  
     - returns: RequestBuilder<OrderApiInfo> 
     */
    open class func orderGetOrderWithRequestBuilder(orderId: Int) -> RequestBuilder<OrderApiInfo> {
        var localVariablePath = "/api/orders/{orderId}"
        let orderIdPreEscape = "\(APIHelper.mapValueToPathItem(orderId))"
        let orderIdPostEscape = orderIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{orderId}", with: orderIdPostEscape, options: .literal, range: nil)
        let localVariableURLString = APIAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<OrderApiInfo>.Type = APIAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**
     Get list of orders
     
     - parameter patientId: (path) Patient filter 
     - parameter startDate: (query) Date filter (optional)
     - parameter endDate: (query) Date filter (optional)
     - parameter unitId: (query) Unit filter (optional)
     - returns: [OrderShortApiInfo]
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func orderGetOrders(patientId: Int, startDate: Date? = nil, endDate: Date? = nil, unitId: Int? = nil) async throws -> [OrderShortApiInfo] {
        return try await orderGetOrdersWithRequestBuilder(patientId: patientId, startDate: startDate, endDate: endDate, unitId: unitId).execute().body
    }

    /**
     Get list of orders
     - GET /api/person/{patientId}/orders
     - API Key:
       - type: apiKey Api-Key (HEADER)
       - name: Api-Key
     - parameter patientId: (path) Patient filter 
     - parameter startDate: (query) Date filter (optional)
     - parameter endDate: (query) Date filter (optional)
     - parameter unitId: (query) Unit filter (optional)
     - returns: RequestBuilder<[OrderShortApiInfo]> 
     */
    open class func orderGetOrdersWithRequestBuilder(patientId: Int, startDate: Date? = nil, endDate: Date? = nil, unitId: Int? = nil) -> RequestBuilder<[OrderShortApiInfo]> {
        var localVariablePath = "/api/person/{patientId}/orders"
        let patientIdPreEscape = "\(APIHelper.mapValueToPathItem(patientId))"
        let patientIdPostEscape = patientIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{patientId}", with: patientIdPostEscape, options: .literal, range: nil)
        let localVariableURLString = APIAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "startDate": (wrappedValue: startDate?.encodeToJSON(), isExplode: true),
            "endDate": (wrappedValue: endDate?.encodeToJSON(), isExplode: true),
            "unitId": (wrappedValue: unitId?.encodeToJSON(), isExplode: true),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<[OrderShortApiInfo]>.Type = APIAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }
}
