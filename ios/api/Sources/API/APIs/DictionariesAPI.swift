//
// DictionariesAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

open class DictionariesAPI {

    /**

     - returns: [EntityApiInfo]
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func communicationChannelTypesGet() async throws -> [EntityApiInfo] {
        return try await communicationChannelTypesGetWithRequestBuilder().execute().body
    }

    /**
     - GET /api/communicationChannelTypes
     - API Key:
       - type: apiKey Api-Key (HEADER)
       - name: Api-Key
     - returns: RequestBuilder<[EntityApiInfo]> 
     */
    open class func communicationChannelTypesGetWithRequestBuilder() -> RequestBuilder<[EntityApiInfo]> {
        let localVariablePath = "/api/communicationChannelTypes"
        let localVariableURLString = APIAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<[EntityApiInfo]>.Type = APIAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**

     - returns: [EntityApiInfo]
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func containersGet() async throws -> [EntityApiInfo] {
        return try await containersGetWithRequestBuilder().execute().body
    }

    /**
     - GET /api/containers
     - API Key:
       - type: apiKey Api-Key (HEADER)
       - name: Api-Key
     - returns: RequestBuilder<[EntityApiInfo]> 
     */
    open class func containersGetWithRequestBuilder() -> RequestBuilder<[EntityApiInfo]> {
        let localVariablePath = "/api/containers"
        let localVariableURLString = APIAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<[EntityApiInfo]>.Type = APIAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**

     - returns: [PersonIdDocumentTypeApiInfo]
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func personIdDocumentTypesGetPersonIdDocumentTypes() async throws -> [PersonIdDocumentTypeApiInfo] {
        return try await personIdDocumentTypesGetPersonIdDocumentTypesWithRequestBuilder().execute().body
    }

    /**
     - GET /api/personIdDocumentTypes
     - API Key:
       - type: apiKey Api-Key (HEADER)
       - name: Api-Key
     - returns: RequestBuilder<[PersonIdDocumentTypeApiInfo]> 
     */
    open class func personIdDocumentTypesGetPersonIdDocumentTypesWithRequestBuilder() -> RequestBuilder<[PersonIdDocumentTypeApiInfo]> {
        let localVariablePath = "/api/personIdDocumentTypes"
        let localVariableURLString = APIAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<[PersonIdDocumentTypeApiInfo]>.Type = APIAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**
     Gets person relation types to use for personRelation resource
     
     - returns: [PersonRelationTypeApiInfo]
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func personRelationTypesGetPersonRelationTypes() async throws -> [PersonRelationTypeApiInfo] {
        return try await personRelationTypesGetPersonRelationTypesWithRequestBuilder().execute().body
    }

    /**
     Gets person relation types to use for personRelation resource
     - GET /api/personRelationTypes
     - API Key:
       - type: apiKey Api-Key (HEADER)
       - name: Api-Key
     - returns: RequestBuilder<[PersonRelationTypeApiInfo]> 
     */
    open class func personRelationTypesGetPersonRelationTypesWithRequestBuilder() -> RequestBuilder<[PersonRelationTypeApiInfo]> {
        let localVariablePath = "/api/personRelationTypes"
        let localVariableURLString = APIAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<[PersonRelationTypeApiInfo]>.Type = APIAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**

     - returns: [EntityApiInfo]
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func specialitiesGet() async throws -> [EntityApiInfo] {
        return try await specialitiesGetWithRequestBuilder().execute().body
    }

    /**
     - GET /api/specialities
     - API Key:
       - type: apiKey Api-Key (HEADER)
       - name: Api-Key
     - returns: RequestBuilder<[EntityApiInfo]> 
     */
    open class func specialitiesGetWithRequestBuilder() -> RequestBuilder<[EntityApiInfo]> {
        let localVariablePath = "/api/specialities"
        let localVariableURLString = APIAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<[EntityApiInfo]>.Type = APIAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**

     - returns: [EntityApiInfo]
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func substancesGet() async throws -> [EntityApiInfo] {
        return try await substancesGetWithRequestBuilder().execute().body
    }

    /**
     - GET /api/substances
     - API Key:
       - type: apiKey Api-Key (HEADER)
       - name: Api-Key
     - returns: RequestBuilder<[EntityApiInfo]> 
     */
    open class func substancesGetWithRequestBuilder() -> RequestBuilder<[EntityApiInfo]> {
        let localVariablePath = "/api/substances"
        let localVariableURLString = APIAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<[EntityApiInfo]>.Type = APIAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }
}
