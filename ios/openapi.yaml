x-generator: NSwag v14.1.0.0 (NJsonSchema v11.0.2.0 (Newtonsoft.Json v13.0.0.0))
openapi: 3.0.0
info:
  title: DocDream REST API
  description: REST API for integrating DocDream with external systems
  version: 1.0.0
servers:
  - url: https://demo.docdream.com:8001
paths:
  /api/appointments:
    get:
      tags:
        - Appointments
      summary: Get list of appointments. Either date range or patient Id is required
      operationId: Appointment_GetAppointments
      parameters:
        - name: startDate
          in: query
          description: Date filter
          schema:
            type: string
            format: date-time
            nullable: true
          x-position: 1
        - name: endDate
          in: query
          description: Date filter
          schema:
            type: string
            format: date-time
            nullable: true
          x-position: 2
        - name: patientId
          in: query
          description: Patient filter
          schema:
            type: integer
            format: int32
            nullable: true
          x-position: 3
        - name: executorId
          in: query
          description: Executor filter
          schema:
            type: integer
            format: int32
            nullable: true
          x-position: 4
        - name: referrerId
          in: query
          description: Referrer filter
          schema:
            type: integer
            format: int32
            nullable: true
          x-position: 5
        - name: unitId
          in: query
          description: Unit filter
          schema:
            type: integer
            format: int32
            nullable: true
          x-position: 6
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AppointmentApiInfo'
      security:
        - Api-Key: []
    post:
      tags:
        - Appointments
      summary: Create appointment. Appointment is created in confirmed (Planned) state. Venue is automatic.
      operationId: Appointment_PlanAppointment
      requestBody:
        x-name: request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppointmentPlanningRequest'
        required: true
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppointmentApiInfo'
      security:
        - Api-Key: []
  /api/appointments/{appointmentId}:
    get:
      tags:
        - Appointments
      summary: Get appointment by id
      operationId: Appointment_GetAppointmentInfo
      parameters:
        - name: appointmentId
          in: path
          required: true
          schema:
            type: integer
            format: int32
          x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppointmentOrderApiInfo'
      security:
        - Api-Key: []
    patch:
      tags:
        - Appointments
      summary: Update appointment by id
      operationId: Appointment_PatchAppointment
      parameters:
        - name: appointmentId
          in: path
          required: true
          schema:
            type: integer
            format: int32
          x-position: 1
      requestBody:
        x-name: patch
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppointmentApiPatch'
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
      security:
        - Api-Key: []
  /api/areas:
    get:
      tags:
        - Areas
      operationId: Areas_GetAll
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EntityApiInfo'
      security:
        - Api-Key: []
  /api/areas/{id}:
    get:
      tags:
        - Areas
      operationId: Areas_Get
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
          x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityApiInfo'
      security:
        - Api-Key: []
  /api/communicationChannelTypes:
    get:
      tags:
        - Dictionaries
      operationId: CommunicationChannelTypes_Get
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EntityApiInfo'
      security:
        - Api-Key: []
  /api/containers:
    get:
      tags:
        - Dictionaries
      operationId: Containers_Get
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EntityApiInfo'
      security:
        - Api-Key: []
  /api/documents/{documentId}/render:
    get:
      tags:
        - Documents
      summary: Render document as PDF
      operationId: Documents_RenderPdf
      parameters:
        - name: documentId
          in: path
          required: true
          schema:
            type: integer
            format: int32
          x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
      security:
        - Api-Key: []
  /api/documents/{documentId}/download:
    get:
      tags:
        - Documents
      summary: Download attachment
      operationId: Documents_DownloadAttachment
      parameters:
        - name: documentId
          in: path
          required: true
          schema:
            type: integer
            format: int32
          x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
      security:
        - Api-Key: []
  /api/documents/{documentId}/hl7:
    get:
      tags:
        - Documents
      summary: Get document as HL7 v2 message
      operationId: Documents_GetHl7
      parameters:
        - name: documentId
          in: path
          required: true
          schema:
            type: integer
            format: int32
          x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
      security:
        - Api-Key: []
  /api/documents/{documentId}/records:
    get:
      tags:
        - Documents
      operationId: Documents_GetDocumentRecords
      parameters:
        - name: documentId
          in: path
          required: true
          schema:
            type: integer
            format: int32
          x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DocumentRecordApiInfo'
      security:
        - Api-Key: []
  /api/documents/onlineaccesscode/{onlineAccessCode}/download:
    get:
      tags:
        - Documents
      summary: Download document from online access code
      operationId: Documents_DownloadDocumentFromAccessCode
      parameters:
        - name: onlineAccessCode
          in: path
          required: true
          schema:
            type: string
          x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
      security:
        - Api-Key: []
  /api/persons/{personId}/documents:
    get:
      tags:
        - Documents
      summary: List documents for a person. Documents must be finalized (protected) to appear here.
      operationId: Documents_GetPersonDocuments
      parameters:
        - name: personId
          in: path
          required: true
          schema:
            type: integer
            format: int32
          x-position: 1
        - name: startDate
          in: query
          description: Date filter
          schema:
            type: string
            format: date-time
            nullable: true
          x-position: 2
        - name: endDate
          in: query
          description: Date filter
          schema:
            type: string
            format: date-time
            nullable: true
          x-position: 3
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DocumentApiInfo'
      security:
        - Api-Key: []
    post:
      tags:
        - Documents
      summary: Attach file to patient's medical card
      operationId: Documents_AttachDocument
      parameters:
        - name: personId
          in: path
          required: true
          schema:
            type: integer
            format: int32
          x-position: 1
      requestBody:
        x-name: request
        description: |-
          contentType: PdfDocument | Jpeg | Png | Gif | HtmlDocument | DicomFile

          documentType: TitlePage | Consultation | Diary | ExaminationReport | LaboratoryResult | InterventionRecord | PrescriptionSheet | Epicrisis | Certificate | Referral | Consent | Contract | Financial | OtherNonMedical | OtherMedical
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PersonDocumentApiAttach'
            example:
              documentName: Document name
              documentDate: '2024-09-20'
              documentType: LaboratoryResult
              contentType: PdfDocument
              content: 
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
      security:
        - Api-Key: []
  /api/employees:
    get:
      tags:
        - Resources
      summary: Get list of employees
      operationId: Employees_GetEmployees
      parameters:
        - name: specialityId
          in: query
          description: Optional speciality filter
          schema:
            type: integer
            format: int32
            nullable: true
          x-position: 1
        - name: unitId
          in: query
          description: Optional unit filter
          schema:
            type: integer
            format: int32
            nullable: true
          x-position: 2
        - name: includeNonActive
          in: query
          description: Include non active employees
          schema:
            type: boolean
            default: false
          x-position: 3
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmployeeApiInfo'
      security:
        - Api-Key: []
  /api/employees/{employeeId}/commissions:
    get:
      tags:
        - Resources
      summary: Gets executor commissions for the period
      operationId: Employees_GetCommissions
      parameters:
        - name: employeeId
          in: path
          required: true
          schema:
            type: integer
            format: int32
          x-position: 1
        - name: startDate
          in: query
          required: true
          schema:
            type: string
            format: date
          x-position: 2
        - name: endDate
          in: query
          required: true
          schema:
            type: string
            format: date
          x-position: 3
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CommissionInfo'
      security:
        - Api-Key: []
  /api/executors:
    get:
      tags:
        - Resources
      summary: Get list of executors
      operationId: Executors_GetEmployees
      parameters:
        - name: specialityId
          in: query
          description: Optional speciality filter
          schema:
            type: integer
            format: int32
            nullable: true
          x-position: 1
        - name: unitId
          in: query
          description: Optional unit filter
          schema:
            type: integer
            format: int32
            nullable: true
          x-position: 2
        - name: includeNonActive
          in: query
          description: Include non active executors
          schema:
            type: boolean
            default: false
          x-position: 3
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ExecutorApiInfo'
      security:
        - Api-Key: []
  /api/executors/{executorId}/persons:
    get:
      tags:
        - Resources
      summary: Gets ids of patient (persons), which had at least one service performed to by specified executor within specified dates.
      operationId: Executors_GetCustomers
      parameters:
        - name: executorId
          in: path
          required: true
          schema:
            type: integer
            format: int32
          x-position: 1
        - name: startDate
          in: query
          required: true
          schema:
            type: string
            format: date
          x-position: 2
        - name: endDate
          in: query
          required: true
          schema:
            type: string
            format: date
          x-position: 3
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: integer
                  format: int32
      security:
        - Api-Key: []
  /api/executors/{executorId}/abilities:
    get:
      tags:
        - Resources
      summary: Get list of routines executor is capable of
      operationId: Executors_GetAbilities
      parameters:
        - name: executorId
          in: path
          required: true
          description: Id of executor (not same as employeeId!)
          schema:
            type: integer
            format: int32
          x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AbilityApiInfo'
      security:
        - Api-Key: []
  /api/healthCareInstitutions:
    get:
      tags:
        - HealthCareInstitutions
      operationId: HealthCareInstitutions_GetAll
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EntityApiInfo'
      security:
        - Api-Key: []
  /api/healthCareInstitutions/{id}:
    get:
      tags:
        - HealthCareInstitutions
      operationId: HealthCareInstitutions_Get
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
          x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityApiInfo'
      security:
        - Api-Key: []
  /api/medReps:
    get:
      tags:
        - MedReps
      operationId: MedReps_GetAll
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EntityApiInfo'
      security:
        - Api-Key: []
  /api/medReps/{id}:
    get:
      tags:
        - MedReps
      operationId: MedReps_Get
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
          x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityApiInfo'
      security:
        - Api-Key: []
  /api/person/{patientId}/orders:
    get:
      tags:
        - Orders
      summary: Get list of orders
      operationId: Order_GetOrders
      parameters:
        - name: patientId
          in: path
          required: true
          description: Patient filter
          schema:
            type: integer
            format: int32
          x-position: 1
        - name: startDate
          in: query
          description: Date filter
          schema:
            type: string
            format: date-time
            nullable: true
          x-position: 2
        - name: endDate
          in: query
          description: Date filter
          schema:
            type: string
            format: date-time
            nullable: true
          x-position: 3
        - name: unitId
          in: query
          description: Unit filter
          schema:
            type: integer
            format: int32
            nullable: true
          x-position: 4
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderShortApiInfo'
      security:
        - Api-Key: []
  /api/orders/{orderId}:
    get:
      tags:
        - Orders
      summary: Get order by id
      operationId: Order_GetOrder
      parameters:
        - name: orderId
          in: path
          required: true
          schema:
            type: integer
            format: int32
          x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderApiInfo'
      security:
        - Api-Key: []
  /api/orders:
    post:
      tags:
        - Orders
      summary: Create new order
      operationId: Order_CreateNewOrder
      requestBody:
        x-name: create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderApiCreate'
        required: true
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityIdApiInfo'
      security:
        - Api-Key: []
  /api/payments:
    post:
      tags:
        - Payments
      summary: Create new payment
      operationId: Payments_CreatePayment
      requestBody:
        x-name: newPayment
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePaymentApiRequest'
        required: true
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
      security:
        - Api-Key: []
  /api/persons/{personId}/accounts:
    get:
      tags:
        - Person Accounts
      summary: Get person accounts
      operationId: PersonAccount_GetAccounts
      parameters:
        - name: personId
          in: path
          required: true
          schema:
            type: integer
            format: int32
          x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AccountBalanceApiInfo'
      security:
        - Api-Key: []
  /api/personAccounts/{personId}/records:
    get:
      tags:
        - Person Accounts
      summary: Get person payments
      operationId: PersonAccount_GetPersonPayments
      parameters:
        - name: personId
          in: path
          required: true
          schema:
            type: integer
            format: int32
          x-position: 1
        - name: startDate
          in: query
          required: true
          schema:
            type: string
            format: date
          x-position: 2
        - name: endDate
          in: query
          required: true
          schema:
            type: string
            format: date
          x-position: 3
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PaymentApiInfo'
      security:
        - Api-Key: []
  /api/personAccounts/{personAccountId}/records:
    post:
      tags:
        - Person Accounts
      summary: Top up person account by adding Internet payment
      operationId: PersonAccount_TopUpPersonAccount
      parameters:
        - name: personAccountId
          in: path
          required: true
          schema:
            type: integer
            format: int32
          x-position: 1
      requestBody:
        x-name: accountRecord
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAccountRecordApiRequest'
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
      security:
        - Api-Key: []
  /api/persons/{personId}/channels:
    get:
      tags:
        - Person Channels
      operationId: PersonChannels_GetPersonChannels
      parameters:
        - name: personId
          in: path
          required: true
          schema:
            type: integer
            format: int32
          x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PersonChannelApiInfo'
      security:
        - Api-Key: []
    post:
      tags:
        - Person Channels
      operationId: PersonChannels_CreatePersonChannel
      parameters:
        - name: personId
          in: path
          required: true
          schema:
            type: integer
            format: int32
          x-position: 1
      requestBody:
        x-name: create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PersonChannelApiCreate'
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityIdApiInfo'
      security:
        - Api-Key: []
  /api/personChannels/{channelId}:
    patch:
      tags:
        - Person Channels
      operationId: PersonChannels_PersonChannelPatch
      parameters:
        - name: channelId
          in: path
          required: true
          schema:
            type: integer
            format: int32
          x-position: 1
      requestBody:
        x-name: patch
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PersonChannelApiPatch'
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
      security:
        - Api-Key: []
    delete:
      tags:
        - Person Channels
      operationId: PersonChannels_DeletePersonChannel
      parameters:
        - name: channelId
          in: path
          required: true
          schema:
            type: integer
            format: int32
          x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
      security:
        - Api-Key: []
  /api/persons/{personId}/idDocuments:
    post:
      tags:
        - Persons
      operationId: PersonIdDocuments_CreatePersonIdDocument
      parameters:
        - name: personId
          in: path
          required: true
          schema:
            type: integer
            format: int32
          x-position: 1
      requestBody:
        x-name: create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PersonIdDocumentApiCreate'
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityIdApiInfo'
      security:
        - Api-Key: []
  /api/personIdDocumentTypes:
    get:
      tags:
        - Dictionaries
      operationId: PersonIdDocumentTypes_GetPersonIdDocumentTypes
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PersonIdDocumentTypeApiInfo'
      security:
        - Api-Key: []
  /api/persons/{personId}/relations:
    get:
      tags:
        - Person Relations
      summary: Get person relations
      operationId: PersonRelation_GetPersonRelations
      parameters:
        - name: personId
          in: path
          required: true
          schema:
            type: integer
            format: int32
          x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
      security:
        - Api-Key: []
    post:
      tags:
        - Person Relations
      summary: Create a new person relation
      operationId: PersonRelation_CreatePersonRelation
      parameters:
        - name: personId
          in: path
          required: true
          schema:
            type: integer
            format: int32
          x-position: 1
      requestBody:
        x-name: newRelation
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePersonRelationApiRequest'
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityIdApiInfo'
      security:
        - Api-Key: []
  /api/personRelationTypes:
    get:
      tags:
        - Dictionaries
      summary: Gets person relation types to use for personRelation resource
      operationId: PersonRelationTypes_GetPersonRelationTypes
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PersonRelationTypeApiInfo'
      security:
        - Api-Key: []
  /api/persons:
    get:
      tags:
        - Persons
      summary: 'At least 1 parameter is required from the following: lastName, barcode, identificationNumber, channel'
      operationId: Persons_Index
      parameters:
        - name: lastName
          in: query
          schema:
            type: string
            nullable: true
          x-position: 1
        - name: firstName
          in: query
          schema:
            type: string
            nullable: true
          x-position: 2
        - name: patronymicName
          in: query
          schema:
            type: string
            nullable: true
          x-position: 3
        - name: channel
          in: query
          schema:
            type: string
            nullable: true
          x-position: 4
        - name: barcode
          in: query
          schema:
            type: string
            nullable: true
          x-position: 5
        - name: identificationNumber
          in: query
          schema:
            type: string
            nullable: true
          x-position: 6
        - name: dateOfBirth
          in: query
          schema:
            type: string
            format: date
            nullable: true
          x-position: 7
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PersonApiSearchResult'
      security:
        - Api-Key: []
    post:
      tags:
        - Persons
      summary: Create new person.
      operationId: Persons_CreatePerson
      requestBody:
        x-name: create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PersonApiCreate'
        required: true
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityIdApiInfo'
      security:
        - Api-Key: []
  /api/persons/{personId}:
    get:
      tags:
        - Persons
      summary: Returns details for a specific person.
      operationId: Persons_GetPerson
      parameters:
        - name: personId
          in: path
          required: true
          schema:
            type: integer
            format: int32
          x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonApiInfo'
      security:
        - Api-Key: []
    patch:
      tags:
        - Persons
      summary: Updates person. Handle with care! Employees can also be updated in this way.
      operationId: Persons_PatchPerson
      parameters:
        - name: personId
          in: path
          required: true
          schema:
            type: integer
            format: int32
          x-position: 1
      requestBody:
        x-name: patch
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PersonApiPatch'
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
      security:
        - Api-Key: []
  /api/persons/{personId}/settlements:
    get:
      tags:
        - Persons
      summary: Returns payments (sales) for a person, used for CRM customer profiling.
      operationId: Persons_GetPersonSettlementInfos
      parameters:
        - name: personId
          in: path
          required: true
          schema:
            type: integer
            format: int32
          x-position: 1
        - name: startDate
          in: query
          required: true
          schema:
            type: string
            format: date
          x-position: 2
        - name: endDate
          in: query
          required: true
          schema:
            type: string
            format: date
          x-position: 3
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PersonSettlementInfo'
      security:
        - Api-Key: []
  /api/persons/{personId}/practitioners:
    get:
      tags:
        - Persons
      summary: Gets ids of practitioners, which had at least one service referred to by specified person within specified dates.
      operationId: Persons_GetPersonPractitionersInfos
      parameters:
        - name: personId
          in: path
          required: true
          schema:
            type: integer
            format: int32
          x-position: 1
        - name: startDate
          in: query
          required: true
          schema:
            type: string
            format: date
          x-position: 2
        - name: endDate
          in: query
          required: true
          schema:
            type: string
            format: date
          x-position: 3
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EntityApiInfo'
      security:
        - Api-Key: []
  /api/persons/{personId}/personalDataConsentForms:
    get:
      tags:
        - Persons
      summary: Retrieves the personal data consent forms for a specified person.
      operationId: Persons_GetPersonalDataConsentForms
      parameters:
        - name: personId
          in: path
          required: true
          schema:
            type: integer
            format: int32
          x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PersonalDataConsentFormApiInfo'
      security:
        - Api-Key: []
    post:
      tags:
        - Persons
      summary: Register new personal data consent form for a person.
      operationId: Persons_CreatePersonalDataConsentForm
      parameters:
        - name: personId
          in: path
          required: true
          schema:
            type: integer
            format: int32
          x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityIdApiInfo'
      security:
        - Api-Key: []
  /api/planning:
    get:
      tags:
        - Planning
      summary: Get available intervals according to search parameters.
      operationId: PlanningApi_GetPlanning
      parameters:
        - name: startDate
          in: query
          required: true
          schema:
            type: string
            format: date
          x-position: 1
        - name: endDate
          in: query
          required: true
          schema:
            type: string
            format: date
          x-position: 2
        - name: unitId
          in: query
          schema:
            type: integer
            format: int32
            nullable: true
          x-position: 3
        - name: executorId
          in: query
          schema:
            type: integer
            format: int32
            nullable: true
          x-position: 4
        - name: specialityId
          in: query
          schema:
            type: integer
            format: int32
            nullable: true
          x-position: 5
        - name: routineId
          in: query
          schema:
            type: integer
            format: int32
            nullable: true
          x-position: 6
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PlanningResultApiInfo'
      security:
        - Api-Key: []
  /api/planning/multi:
    post:
      tags:
        - Planning
      summary: Get multiple planning appointment data
      operationId: PlanningApi_GetMultiPlanningAppointmentData
      requestBody:
        x-name: request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetMultiPlanningAppointmentDataRequest'
        required: true
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AppointmentPlanningDataApiInfo'
      security:
        - Api-Key: []
  /api/practitioners:
    get:
      tags:
        - Referring doctors
      summary: Get referring doctors
      operationId: Practitioner_GetPractitioners
      parameters:
        - name: code
          in: query
          description: Code
          schema:
            type: string
            nullable: true
          x-position: 1
        - name: page
          in: query
          description: Page
          schema:
            type: integer
            format: int32
            default: 1
          x-position: 2
        - name: pageSize
          in: query
          description: Page size (max 200)
          schema:
            type: integer
            format: int32
            default: 50
          x-position: 3
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PractitionerApiInfo'
      security:
        - Api-Key: []
    post:
      tags:
        - Referring doctors
      summary: Create practitioner (referring doctor). Id of existing person should be provided. Id of practitioner resource is equal to person.id
      operationId: Practitioner_CreatePractitioner
      requestBody:
        x-name: request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePractitionerApiRequest'
        required: true
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityIdApiInfo'
      security:
        - Api-Key: []
  /api/practitioners/{practitionerId}/persons:
    get:
      tags:
        - Referring doctors
      summary: Gets ids of patient (persons), which had at least one service referred to by specified practitioner within specified dates.
      operationId: Practitioner_GetCustomers
      parameters:
        - name: practitionerId
          in: path
          required: true
          schema:
            type: integer
            format: int32
          x-position: 1
        - name: startDate
          in: query
          required: true
          schema:
            type: string
            format: date
          x-position: 2
        - name: endDate
          in: query
          required: true
          schema:
            type: string
            format: date
          x-position: 3
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: integer
                  format: int32
      security:
        - Api-Key: []
  /api/practitioners/{practitionerId}/commissions:
    get:
      tags:
        - Referring doctors
      summary: Gets practitioner commissions for the period
      operationId: Practitioner_GetCommissions
      parameters:
        - name: practitionerId
          in: path
          required: true
          schema:
            type: integer
            format: int32
          x-position: 1
        - name: startDate
          in: query
          required: true
          schema:
            type: string
            format: date
          x-position: 2
        - name: endDate
          in: query
          required: true
          schema:
            type: string
            format: date
          x-position: 3
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CommissionInfo'
      security:
        - Api-Key: []
  /api/priceModels:
    get:
      tags:
        - Pricing
      operationId: PriceModels_GetPriceModels
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PriceModelApiInfo'
      security:
        - Api-Key: []
  /api/priceModels/{priceModelId}/routines/{routineId}:
    get:
      tags:
        - Pricing
      operationId: PriceModels_GetRoutinePrice
      parameters:
        - name: priceModelId
          in: path
          required: true
          schema:
            type: integer
            format: int32
          x-position: 1
        - name: routineId
          in: path
          required: true
          schema:
            type: integer
            format: int32
          x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoutinePriceApiInfo'
      security:
        - Api-Key: []
  /api/priceModels/{priceModelId}/priceRules:
    get:
      tags:
        - Pricing
      operationId: PriceModels_GetPriceRules
      parameters:
        - name: priceModelId
          in: path
          required: true
          schema:
            type: integer
            format: int32
          x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RoutinePriceApiInfo'
      security:
        - Api-Key: []
  /api/promotions:
    get:
      tags:
        - Promotions
      summary: Get all active promotions
      operationId: Promotion_GetAll
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EntityApiInfo'
      security:
        - Api-Key: []
  /api/promotions/{promotionId}:
    get:
      tags:
        - Promotions
      summary: Get promotion details
      operationId: Promotion_GetPromotion
      parameters:
        - name: promotionId
          in: path
          required: true
          schema:
            type: integer
            format: int32
          x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PromotionApiInfo'
      security:
        - Api-Key: []
  /api/routines/{routineId}/promotions:
    get:
      tags:
        - Promotions
      summary: Get possible promotions for routine
      operationId: Promotion_GetRoutinePromotions
      parameters:
        - name: routineId
          in: path
          required: true
          schema:
            type: integer
            format: int32
          x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RoutinePromotionApiInfo'
      security:
        - Api-Key: []
  /api/employees/{employeeId}/timeslots:
    get:
      tags:
        - Resources
      summary: Gets employee timeslots for the specified dates, grouped by unit
      operationId: ResourceTimeslot_GetTimeSlots
      parameters:
        - name: employeeId
          in: path
          required: true
          schema:
            type: integer
            format: int32
          x-position: 1
        - name: startDate
          in: query
          required: true
          schema:
            type: string
            format: date
          x-position: 2
        - name: endDate
          in: query
          required: true
          schema:
            type: string
            format: date
          x-position: 3
        - name: unitId
          in: query
          schema:
            type: integer
            format: int32
            nullable: true
          x-position: 4
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ExecutorUnitTimeslots'
      security:
        - Api-Key: []
  /api/routines:
    get:
      tags:
        - Routines
      summary: Search routines. If search is not specified, all routines are returned
      operationId: Routines_SearchRoutines
      parameters:
        - name: search
          in: query
          description: Part of name, group name, keyword, or code (exact match)
          schema:
            type: string
            nullable: true
          x-position: 1
        - name: includeDeactivated
          in: query
          description: Include inactive routines into search result
          schema:
            type: boolean
          x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RoutineApiSearchResult'
      security:
        - Api-Key: []
  /api/routines/{routineId}:
    get:
      tags:
        - Routines
      summary: Get details for routine
      operationId: Routines_GetRoutine
      parameters:
        - name: routineId
          in: path
          required: true
          schema:
            type: integer
            format: int32
          x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoutineApiInfo'
      security:
        - Api-Key: []
  /api/routineGroups:
    get:
      tags:
        - Routines
      summary: Get routine groups
      operationId: Routines_GetRoutineGroups
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RoutineGroupApiInfo'
      security:
        - Api-Key: []
  /api/specialities:
    get:
      tags:
        - Dictionaries
      operationId: Specialities_Get
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EntityApiInfo'
      security:
        - Api-Key: []
  /api/substances:
    get:
      tags:
        - Dictionaries
      operationId: Substances_Get
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EntityApiInfo'
      security:
        - Api-Key: []
  /api/units:
    get:
      tags:
        - Resources
      summary: Get list of units - clinic and blood drawing points. Units are used when planning and creating orders.
      operationId: Units_Get
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UnitApiInfo'
      security:
        - Api-Key: []
components:
  schemas:
    AppointmentApiInfo:
      type: object
      additionalProperties: false
      properties:
        id:
          type: integer
          format: int32
        unitId:
          type: integer
          format: int32
          nullable: true
        mainExecutorEmployeeId:
          type: integer
          format: int32
          nullable: true
        referrerId:
          type: integer
          format: int32
          nullable: true
        venueId:
          type: integer
          format: int32
          nullable: true
        start:
          type: string
          format: date-time
        duration:
          type: integer
          format: int32
    AppointmentOrderApiInfo:
      type: object
      additionalProperties: false
      properties:
        personId:
          type: integer
          format: int32
        unitId:
          type: integer
          format: int32
          nullable: true
        venueId:
          type: integer
          format: int32
          nullable: true
        mainExecutorId:
          type: integer
          format: int32
          nullable: true
        referrerId:
          type: integer
          format: int32
          nullable: true
        state:
          $ref: '#/components/schemas/AppointmentState'
        visitConfirmationState:
          $ref: '#/components/schemas/VisitConfirmationState'
        plannedStartTime:
          type: string
          format: date-time
        comment:
          type: string
          nullable: true
        customerInformationSourceDescription:
          type: string
          nullable: true
        services:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/OrderServiceApiInfo'
        hasLabRequest:
          type: boolean
        diagnosisCodes:
          type: array
          nullable: true
          items:
            type: string
        availableStates:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/AppointmentState'
    AppointmentState:
      type: string
      description: ''
      x-enumNames:
        - NotDefined
        - Reserved
        - Planned
        - PatientWaiting
        - InProgress
        - Suspended
        - Completed
        - Cancelled
        - NoShow
        - ToPlan
      enum:
        - NotDefined
        - Reserved
        - Planned
        - PatientWaiting
        - InProgress
        - Suspended
        - Completed
        - Cancelled
        - NoShow
        - ToPlan
    VisitConfirmationState:
      type: string
      description: ''
      x-enumNames:
        - NotDefined
        - NotConfirmed
        - MessageReminder
        - ConfirmedByPhone
        - CallFailed
        - NotNeeded
        - ConfirmedByOnlineForm
        - ConfirmedViaChatBot
      enum:
        - NotDefined
        - NotConfirmed
        - MessageReminder
        - ConfirmedByPhone
        - CallFailed
        - NotNeeded
        - ConfirmedByOnlineForm
        - ConfirmedViaChatBot
    OrderServiceApiInfo:
      type: object
      additionalProperties: false
      properties:
        id:
          type: integer
          format: int32
        payerId:
          type: integer
          format: int32
        routineId:
          type: integer
          format: int32
        referrerId:
          type: integer
          format: int32
          nullable: true
        isBillable:
          type: boolean
        unitPrice:
          type: number
          format: decimal
        quantity:
          type: number
          format: decimal
        discount:
          type: number
          format: decimal
        deductible:
          type: number
          format: decimal
        value:
          type: number
          format: decimal
        vatRate:
          type: number
          format: decimal
          nullable: true
        settledAmoutPerson:
          type: number
          format: decimal
        settledAmoutCompany:
          type: number
          format: decimal
    AppointmentPlanningRequest:
      type: object
      additionalProperties: false
      required:
        - personId
        - mainExecutorId
        - unitId
        - start
        - duration
      properties:
        personId:
          type: integer
          description: Person to plan appointment for
          format: int32
        mainExecutorId:
          type: integer
          description: Id of main executor resource (employee or role). Use id of executor which is returned by api/planning
          format: int32
        unitId:
          type: integer
          description: Id of Unit to plan appointment
          format: int32
        start:
          type: string
          description: Date and time of appointment start
          format: date-time
          minLength: 1
        duration:
          type: integer
          description: Appointment duration in minutes
          format: int32
        state:
          description: Appointment state - Planned or Reserved. If not specified, Planned is assumed.
          nullable: true
          oneOf:
            - $ref: '#/components/schemas/AppointmentState'
        reserveExpiration:
          type: string
          description: Date and time of reserve expiration. Used only for Reserved state. If empty, 10 minutes is assumed
          format: date-time
          nullable: true
        referrerId:
          type: integer
          description: Id of referring doctor (practitioner resource).
          format: int32
          nullable: true
        services:
          type: array
          description: List of services to plan. May be null/empty, empty appointments are permitted.
          nullable: true
          items:
            $ref: '#/components/schemas/ServiceInAppointmentRequest'
    ServiceInAppointmentRequest:
      type: object
      additionalProperties: false
      required:
        - routineId
      properties:
        routineId:
          type: integer
          description: Routine Id for service
          format: int32
        unitPrice:
          type: number
          description: Service unit price. Omit this parameter or pass null to get default price from pricelist
          format: decimal
          nullable: true
        discount:
          type: number
          description: Service discount, as fraction. 10% discount should be passed as 0.1. Omit this parameter or pass null to get default discount from pricelist
          format: decimal
          nullable: true
    AppointmentApiPatch:
      type: object
      additionalProperties: false
      properties:
        state:
          nullable: true
          oneOf:
            - $ref: '#/components/schemas/PropertyPatchOfAppointmentState'
    PropertyPatchOfAppointmentState:
      type: object
      additionalProperties: false
      properties:
        value:
          $ref: '#/components/schemas/AppointmentState'
    EntityApiInfo:
      type: object
      additionalProperties: false
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
          nullable: true
    DocumentRecordApiInfo:
      type: object
      additionalProperties: false
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
          nullable: true
    DocumentApiInfo:
      type: object
      additionalProperties: false
      properties:
        id:
          type: integer
          format: int32
        type:
          type: string
          nullable: true
        typeName:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        appointmentId:
          type: integer
          format: int32
          nullable: true
        createdOn:
          type: string
          format: date-time
          nullable: true
        author:
          nullable: true
          oneOf:
            - $ref: '#/components/schemas/EntityApiInfo'
        isAttachment:
          type: boolean
        contentType:
          type: string
          nullable: true
    PersonDocumentApiAttach:
      type: object
      additionalProperties: false
      required:
        - documentName
        - content
      properties:
        documentName:
          type: string
          description: Original file name. If has extension, will be used to determine content type if ContentType is not specified. File name without extension becomes document name.
          minLength: 1
        documentDate:
          type: string
          description: Document date / time. If not specified, current date is used
          format: date
        documentType:
          description: Specifies target medical card section. Defaults to LaboratoryResult.
          oneOf:
            - $ref: '#/components/schemas/DocumentType'
        contentType:
          description: Content type. Has priority over file extension.
          oneOf:
            - $ref: '#/components/schemas/AttachmentContentType'
        content:
          type: string
          description: Base64 encoded file content
          format: byte
          minLength: 1
    DocumentType:
      type: string
      description: ''
      x-enumNames:
        - Undefined
        - TitlePage
        - Consultation
        - Diary
        - ExaminationReport
        - LaboratoryResult
        - InterventionRecord
        - PrescriptionSheet
        - Epicrisis
        - Certificate
        - Referral
        - Consent
        - Contract
        - Financial
        - OtherNonMedical
        - OtherMedical
      enum:
        - Undefined
        - TitlePage
        - Consultation
        - Diary
        - ExaminationReport
        - LaboratoryResult
        - InterventionRecord
        - PrescriptionSheet
        - Epicrisis
        - Certificate
        - Referral
        - Consent
        - Contract
        - Financial
        - OtherNonMedical
        - OtherMedical
    AttachmentContentType:
      type: string
      description: ''
      x-enumNames:
        - NotDefined
        - PdfDocument
        - Jpeg
        - Png
        - Gif
        - HtmlDocument
        - DicomFile
        - XpsDocument
        - WordOpenXml
        - ExcelOpenXml
        - Calendar
        - Tiff
        - Bmp
        - Avi
        - Hl7v2
        - Wav
        - Mp3
        - Ogg
        - Zip
        - Webp
        - Mp4
        - Json
      enum:
        - NotDefined
        - PdfDocument
        - Jpeg
        - Png
        - Gif
        - HtmlDocument
        - DicomFile
        - XpsDocument
        - WordOpenXml
        - ExcelOpenXml
        - Calendar
        - Tiff
        - Bmp
        - Avi
        - Hl7v2
        - Wav
        - Mp3
        - Ogg
        - Zip
        - Webp
        - Mp4
        - Json
    EmployeeApiInfo:
      type: object
      additionalProperties: false
      properties:
        id:
          type: integer
          description: Employee id is also a person id
          format: int32
        fullName:
          type: string
          nullable: true
        specialities:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/EntityApiInfo'
        executorId:
          type: integer
          description: Id of executor resource for this employee
          format: int32
          nullable: true
        isActive:
          type: boolean
    CommissionInfo:
      type: object
      additionalProperties: false
      properties:
        patientName:
          title: Patient
          type: string
          nullable: true
        routineName:
          title: Service
          type: string
          nullable: true
        serviceId:
          type: integer
          format: int32
        accruedOn:
          title: Date
          type: string
          format: date-time
        unitName:
          title: Unit
          type: string
          nullable: true
        serviceValue:
          title: Selling price
          type: number
          format: decimal
        value:
          title: Amount
          type: number
          format: decimal
        commissionareShortName:
          type: string
          nullable: true
        extraResourceRequirementTypeName:
          type: string
          nullable: true
        appointmentId:
          type: integer
          format: int32
          nullable: true
        orderId:
          type: integer
          format: int32
          nullable: true
        calculationFormula:
          type: string
          nullable: true
    ExecutorApiInfo:
      type: object
      additionalProperties: false
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
          nullable: true
        isExecutorEmployee:
          type: boolean
        employeeId:
          type: integer
          description: Employee Id (only for employee executors
          format: int32
          nullable: true
        unitIds:
          type: array
          description: List of units which the executor belongs to
          nullable: true
          items:
            type: integer
            format: int32
        defaultAppointmentDuration:
          type: integer
          description: Default timeslot / appointment duration if services are not specified
          format: int32
        isActive:
          type: boolean
    AbilityApiInfo:
      type: object
      additionalProperties: false
      properties:
        routineId:
          type: integer
          description: Id of routine. Only regular routines are allowed in abilities.
          format: int32
        durationSingleOverride:
          type: integer
          description: If set, standalone duration of routine for this employee overrides the default duration
          format: int32
          nullable: true
        durationCombinedOverride:
          type: integer
          description: If set, combined duration of routine for this employee overrides the default duration
          format: int32
          nullable: true
        isAvailableOnline:
          type: boolean
          description: Show the routine on the web portal
    OrderShortApiInfo:
      type: object
      additionalProperties: false
      properties:
        id:
          type: integer
          format: int32
        number:
          type: string
          nullable: true
        dateTime:
          type: string
          format: date-time
        unitId:
          type: integer
          format: int32
    OrderApiInfo:
      type: object
      additionalProperties: false
      properties:
        number:
          type: string
          nullable: true
        dateTime:
          type: string
          format: date-time
        unitId:
          type: integer
          format: int32
        webCode:
          type: string
          nullable: true
        personId:
          type: integer
          format: int32
        isLocked:
          type: boolean
        canBeDeleted:
          type: boolean
        billableValue:
          type: number
          format: decimal
        settledAmountPerson:
          type: number
          format: decimal
        settledAmountCompany:
          type: number
          format: decimal
        outstandingAmountPerson:
          type: number
          format: decimal
        outstandingAmountCompany:
          type: number
          format: decimal
        services:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/ServiceApiInfo'
        labRequestId:
          type: integer
          format: int32
          nullable: true
        payerId:
          type: integer
          format: int32
          nullable: true
        diagnosisForInvoice:
          type: string
          nullable: true
    ServiceApiInfo:
      type: object
      additionalProperties: false
      properties:
        id:
          type: integer
          format: int32
        payerId:
          type: integer
          format: int32
        routineId:
          type: integer
          format: int32
        referrerId:
          type: integer
          format: int32
          nullable: true
        isBillable:
          type: boolean
        unitPrice:
          type: number
          format: decimal
        quantity:
          type: number
          format: decimal
        discount:
          type: number
          format: decimal
        deductible:
          type: number
          format: decimal
        value:
          type: number
          format: decimal
        vatRate:
          type: number
          format: decimal
        settledAmoutPerson:
          type: number
          format: decimal
        settledAmoutCompany:
          type: number
          format: decimal
    EntityIdApiInfo:
      type: object
      additionalProperties: false
      properties:
        id:
          type: integer
          format: int32
    OrderApiCreate:
      type: object
      additionalProperties: false
      required:
        - unitId
        - patientId
      properties:
        unitId:
          type: integer
          format: int32
        patientId:
          type: integer
          format: int32
        dateTime:
          type: string
          description: Date (or date and time) used for order. If not specified, current date/time is used.
          format: date-time
          nullable: true
        referrerId:
          type: integer
          description: Referrer (practitioner) which will be set for services in order.
          format: int32
          nullable: true
        services:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/ServiceInOrderRequest'
        comment:
          type: string
          nullable: true
        diagnosisForInvoice:
          type: string
          nullable: true
    ServiceInOrderRequest:
      type: object
      additionalProperties: false
      required:
        - routineId
        - unitPrice
        - discount
      properties:
        routineId:
          type: integer
          description: Routine Id for service
          format: int32
        unitPrice:
          type: number
          description: Service unit price.
          format: decimal
        discount:
          type: number
          description: Service discount, as fraction. 10% discount should be passed as 0.1.
          format: decimal
    CreatePaymentApiRequest:
      type: object
      additionalProperties: false
      required:
        - amount
      properties:
        invoiceId:
          type: integer
          format: int32
          nullable: true
        appointmentId:
          type: integer
          format: int32
          deprecated: true
          x-deprecatedMessage: Use AppointmentIds
          nullable: true
        appointmentIds:
          type: array
          nullable: true
          items:
            type: integer
            format: int32
        orderId:
          type: integer
          format: int32
          deprecated: true
          x-deprecatedMessage: Use OrderIds
          nullable: true
        orderIds:
          type: array
          nullable: true
          items:
            type: integer
            format: int32
        amount:
          type: number
          format: decimal
        transactionDateTime:
          type: string
          format: date-time
          nullable: true
        id:
          type: string
          nullable: true
        comment:
          type: string
          nullable: true
    AccountBalanceApiInfo:
      type: object
      additionalProperties: false
      properties:
        id:
          type: integer
          format: int32
        currentBalance:
          type: number
          format: decimal
    PaymentApiInfo:
      type: object
      additionalProperties: false
      properties:
        id:
          type: integer
          format: int32
        paymentType:
          $ref: '#/components/schemas/PaymentType'
        number:
          type: string
          nullable: true
        accrualDateTime:
          type: string
          format: date
        cashierDesk:
          nullable: true
          oneOf:
            - $ref: '#/components/schemas/EntityApiInfo'
        isFiscalized:
          type: boolean
        amount:
          type: number
          format: decimal
        createdBy:
          nullable: true
          oneOf:
            - $ref: '#/components/schemas/EntityApiInfo'
        registrationUnit:
          nullable: true
          oneOf:
            - $ref: '#/components/schemas/EntityApiInfo'
        paymentTransactions:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/PaymentTransactionApiInfo'
    PaymentType:
      type: string
      description: ''
      x-enumNames:
        - NotDefined
        - CashierDesk
        - BankTransfer
        - Internet
      enum:
        - NotDefined
        - CashierDesk
        - BankTransfer
        - Internet
    PaymentTransactionApiInfo:
      type: object
      additionalProperties: false
      properties:
        id:
          type: integer
          format: int32
        paymentMethod:
          $ref: '#/components/schemas/PaymentMethod'
        dateTime:
          type: string
          format: date-time
        amount:
          type: number
          format: decimal
        cashInAmount:
          type: number
          format: decimal
        roundingAmount:
          type: number
          format: decimal
        transactionNumber:
          type: string
          nullable: true
    PaymentMethod:
      type: string
      description: ''
      x-enumNames:
        - NotDefined
        - Cash
        - BankCard
        - BankTransfer
        - Internet
      enum:
        - NotDefined
        - Cash
        - BankCard
        - BankTransfer
        - Internet
    CreateAccountRecordApiRequest:
      type: object
      additionalProperties: false
      required:
        - amount
      properties:
        amount:
          type: number
          format: decimal
        transactionDateTime:
          type: string
          description: Date and time of transaction. If left empty, current datetime is used
          format: date-time
          nullable: true
    PersonChannelApiInfo:
      type: object
      additionalProperties: false
      properties:
        id:
          type: integer
          format: int32
        communicationChannelTypeId:
          type: integer
          format: int32
        allowDocumentDelivery:
          type: boolean
        allowNotifications:
          type: boolean
        allowPromotions:
          type: boolean
        value:
          type: string
          nullable: true
        comment:
          type: string
          nullable: true
    PersonChannelApiCreate:
      type: object
      additionalProperties: false
      required:
        - typeId
        - value
        - allowDocumentDelivery
        - allowNotifications
        - allowPromotions
      properties:
        typeId:
          type: integer
          format: int32
        value:
          type: string
          minLength: 1
        comment:
          type: string
          nullable: true
        allowDocumentDelivery:
          type: boolean
        allowNotifications:
          type: boolean
        allowPromotions:
          type: boolean
    PersonChannelApiPatch:
      type: object
      additionalProperties: false
      properties:
        typeId:
          nullable: true
          oneOf:
            - $ref: '#/components/schemas/PropertyPatchOfInteger'
        value:
          nullable: true
          oneOf:
            - $ref: '#/components/schemas/PropertyPatchOfString'
        comment:
          nullable: true
          oneOf:
            - $ref: '#/components/schemas/PropertyPatchOfString'
        allowDocumentDelivery:
          nullable: true
          oneOf:
            - $ref: '#/components/schemas/PropertyPatchOfBoolean'
        allowNotifications:
          nullable: true
          oneOf:
            - $ref: '#/components/schemas/PropertyPatchOfBoolean'
        allowPromotions:
          nullable: true
          oneOf:
            - $ref: '#/components/schemas/PropertyPatchOfBoolean'
    PropertyPatchOfInteger:
      type: object
      additionalProperties: false
      properties:
        value:
          type: integer
          format: int32
    PropertyPatchOfString:
      type: object
      additionalProperties: false
      properties:
        value:
          type: string
          nullable: true
    PropertyPatchOfBoolean:
      type: object
      additionalProperties: false
      properties:
        value:
          type: boolean
    PersonIdDocumentApiCreate:
      type: object
      additionalProperties: false
      properties:
        typeId:
          type: integer
          format: int32
        number:
          type: string
          nullable: true
        issuedBy:
          type: string
          nullable: true
        issuedOn:
          type: string
          format: date
          nullable: true
        expiresOn:
          type: string
          format: date
          nullable: true
        firstName:
          type: string
          nullable: true
        lastName:
          type: string
          nullable: true
    PersonIdDocumentTypeApiInfo:
      type: object
      additionalProperties: false
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
          nullable: true
        canSpecifyName:
          type: boolean
        hasExpirationDate:
          type: boolean
    CreatePersonRelationApiRequest:
      type: object
      additionalProperties: false
      properties:
        relatedPersonId:
          type: integer
          format: int32
        relationTypeId:
          type: integer
          format: int32
        isPartyA:
          type: boolean
        shareMobilePhone:
          type: boolean
        shareLandLine:
          type: boolean
        shareEmail:
          type: boolean
        shareDocuments:
          type: boolean
    PersonRelationTypeApiInfo:
      type: object
      additionalProperties: false
      properties:
        id:
          type: integer
          format: int32
        partyAName:
          type: string
          description: Name of relation from A side
          nullable: true
        partyBName:
          type: string
          description: Name of relation from B side
          nullable: true
        partyAGender:
          type: string
          description: Gender of person at A side of relation. If not specified, relation is not gender specific. Not strictly enforced at API
          nullable: true
        partyBGender:
          type: string
          description: Gender of person at B side of relation. If not specified, relation is not gender specific. Not strictly enforced at API
          nullable: true
    PersonApiSearchResult:
      type: object
      additionalProperties: false
      properties:
        id:
          type: integer
          format: int32
        lastName:
          type: string
          nullable: true
        firstName:
          type: string
          nullable: true
        patronymicName:
          type: string
          nullable: true
        dateOfBirth:
          type: string
          format: date
          nullable: true
        gender:
          type: string
          nullable: true
        barcode:
          type: string
          nullable: true
        identificationNumber:
          type: string
          nullable: true
        createdOn:
          type: string
          format: date-time
        updatedOn:
          type: string
          format: date-time
          nullable: true
    PersonApiInfo:
      type: object
      additionalProperties: false
      properties:
        id:
          type: integer
          format: int32
        lastName:
          type: string
          nullable: true
        firstName:
          type: string
          nullable: true
        patronymicName:
          type: string
          nullable: true
        dateOfBirth:
          type: string
          format: date
          nullable: true
        gender:
          type: string
          nullable: true
        barcode:
          type: string
          nullable: true
        identificationNumber:
          type: string
          nullable: true
        defaultPayerPriceModelId:
          type: integer
          format: int32
          nullable: true
        createdOn:
          type: string
          format: date-time
        updatedOn:
          type: string
          format: date-time
          nullable: true
        isEmployee:
          type: boolean
        isPractitioner:
          type: boolean
    PersonApiCreate:
      type: object
      additionalProperties: false
      required:
        - firstName
        - lastName
      properties:
        firstName:
          type: string
          minLength: 1
        lastName:
          type: string
          minLength: 1
        patronymicName:
          type: string
          nullable: true
        dateOfBirth:
          type: string
          format: date
          nullable: true
        gender:
          $ref: '#/components/schemas/PersonGender'
        createAccountForDefaultOwnCompany:
          type: boolean
    PersonGender:
      type: string
      description: ''
      x-enumNames:
        - Unspecified
        - Male
        - Female
      enum:
        - Unspecified
        - Male
        - Female
    PersonApiPatch:
      type: object
      additionalProperties: false
      properties:
        firstName:
          nullable: true
          oneOf:
            - $ref: '#/components/schemas/PropertyPatchOfString'
        lastName:
          nullable: true
          oneOf:
            - $ref: '#/components/schemas/PropertyPatchOfString'
        patronymicName:
          nullable: true
          oneOf:
            - $ref: '#/components/schemas/PropertyPatchOfString'
        dateOfBirth:
          format: date
          nullable: true
          oneOf:
            - $ref: '#/components/schemas/PropertyPatchOfNullableDateTime'
        gender:
          nullable: true
          oneOf:
            - $ref: '#/components/schemas/PropertyPatchOfPersonGender'
    PropertyPatchOfNullableDateTime:
      type: object
      additionalProperties: false
      properties:
        value:
          type: string
          format: date-time
          nullable: true
    PropertyPatchOfPersonGender:
      type: object
      additionalProperties: false
      properties:
        value:
          $ref: '#/components/schemas/PersonGender'
    PersonSettlementInfo:
      type: object
      additionalProperties: false
      properties:
        settlementDateTime:
          type: string
          format: date-time
        amount:
          type: number
          format: decimal
        vat:
          type: number
          format: decimal
        paymentType:
          type: string
          nullable: true
        cashierDeskName:
          type: string
          nullable: true
        invoiceId:
          type: integer
          format: int32
        invoiceDate:
          type: string
          format: date-time
        invoiceUnitId:
          type: integer
          format: int32
          nullable: true
        invoiceUnitName:
          type: string
          nullable: true
        payerName:
          type: string
          nullable: true
        payerLegalEntityName:
          type: string
          nullable: true
        payerLegalEntityIdentificationNumber:
          type: string
          nullable: true
        sellerLegalEntityName:
          type: string
          nullable: true
        sellerLegalEntityIdentificationNumber:
          type: string
          nullable: true
    PersonalDataConsentFormApiInfo:
      type: object
      additionalProperties: false
      properties:
        id:
          type: integer
          format: int32
        signedOn:
          type: string
          format: date-time
          nullable: true
        createdById:
          type: integer
          format: int32
    PlanningResultApiInfo:
      type: object
      additionalProperties: false
      properties:
        date:
          type: string
          format: date
        unit:
          nullable: true
          oneOf:
            - $ref: '#/components/schemas/EntityApiInfo'
        executor:
          nullable: true
          oneOf:
            - $ref: '#/components/schemas/EntityApiInfo'
        availableIntervals:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/AvailableIntervalApiInfo'
    AvailableIntervalApiInfo:
      type: object
      additionalProperties: false
      properties:
        start:
          type: string
          nullable: true
        end:
          type: string
          nullable: true
    AppointmentPlanningDataApiInfo:
      type: object
      additionalProperties: false
      properties:
        unitId:
          type: integer
          format: int32
        routines:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/RoutineAssociationPlanningDataApiInfo'
        executors:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/EntityApiInfo'
    RoutineAssociationPlanningDataApiInfo:
      type: object
      additionalProperties: false
      properties:
        routineId:
          type: integer
          format: int32
        plannedFromRoutineId:
          type: integer
          format: int32
          nullable: true
    GetMultiPlanningAppointmentDataRequest:
      type: object
      additionalProperties: false
      required:
        - unitId
        - routineIds
      properties:
        unitId:
          type: integer
          format: int32
        routineIds:
          type: array
          items:
            type: integer
            format: int32
    PractitionerApiInfo:
      type: object
      additionalProperties: false
      properties:
        id:
          type: integer
          format: int32
        code:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        specialityIds:
          type: array
          nullable: true
          items:
            type: integer
            format: int32
    CreatePractitionerApiRequest:
      type: object
      additionalProperties: false
      required:
        - personId
      properties:
        personId:
          type: integer
          description: Id of existing person resource to add practitioner role
          format: int32
        principalSpecialityId:
          type: integer
          description: Principal practitioner speciality
          format: int32
          nullable: true
    PriceModelApiInfo:
      type: object
      additionalProperties: false
      properties:
        id:
          type: integer
          format: int32
        code:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        isDefault:
          type: boolean
        payerId:
          type: integer
          format: int32
        payerName:
          type: string
          nullable: true
        legalEntityName:
          type: string
          nullable: true
        legalEntityNationalIdentificationNumber:
          type: string
          nullable: true
    RoutinePriceApiInfo:
      type: object
      additionalProperties: false
      properties:
        routineId:
          type: integer
          format: int32
        isAllowed:
          type: boolean
        price:
          type: number
          format: decimal
          nullable: true
        discount:
          type: number
          format: decimal
          nullable: true
    PromotionApiInfo:
      type: object
      additionalProperties: false
      properties:
        name:
          type: string
          nullable: true
        autoActivation:
          type: boolean
        startDate:
          type: string
          format: date-time
        endDate:
          type: string
          format: date-time
          nullable: true
        dayOfWeekRule:
          type: string
          description: 'Day of the week: 1-7, where 1 is Monday and 7 is Sunday'
          nullable: true
        dayTimeFromRule:
          type: string
          format: duration
          nullable: true
        dayTimeToRule:
          type: string
          format: duration
          nullable: true
        genderRule:
          nullable: true
          oneOf:
            - $ref: '#/components/schemas/PersonGender'
        minAgeRule:
          type: integer
          format: byte
          nullable: true
        maxAgeRule:
          type: integer
          format: byte
          nullable: true
        promotionPayerRules:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/EntityApiInfo'
        promotionUnitRules:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/EntityApiInfo'
        allowAnyRoutine:
          type: boolean
        promotionRoutineRules:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/PromotionRoutineApiInfo'
        discount:
          type: number
          format: decimal
    PromotionRoutineApiInfo:
      type: object
      additionalProperties: false
      properties:
        id:
          type: integer
          format: int32
        code:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        discount:
          type: number
          format: decimal
          nullable: true
    RoutinePromotionApiInfo:
      type: object
      additionalProperties: false
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
          nullable: true
        discound:
          type: number
          format: decimal
    ExecutorUnitTimeslots:
      type: object
      additionalProperties: false
      properties:
        resourceId:
          type: integer
          format: int32
        timeslots:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/TimeslotApiInfo'
    TimeslotApiInfo:
      type: object
      additionalProperties: false
      properties:
        date:
          type: string
          nullable: true
        unitId:
          type: integer
          format: int32
        intervalStart:
          type: string
          nullable: true
        intervalEnd:
          type: string
          nullable: true
    RoutineApiSearchResult:
      type: object
      additionalProperties: false
      properties:
        id:
          type: integer
          format: int32
        code:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        shortName:
          type: string
          nullable: true
        type:
          type: string
          nullable: true
        isActive:
          type: boolean
        isAvailableOnline:
          type: boolean
        groupId:
          type: integer
          format: int32
        groupName:
          type: string
          nullable: true
        topLevelGroupName:
          type: string
          nullable: true
        createdOn:
          type: string
          format: date-time
        updatedOn:
          type: string
          format: date-time
          nullable: true
    RoutineApiInfo:
      type: object
      additionalProperties: false
      properties:
        name:
          type: string
          nullable: true
        shortName:
          type: string
          nullable: true
        code:
          type: string
          nullable: true
        isActive:
          type: boolean
        nameLanguage1:
          type: string
          nullable: true
        nameLanguage2:
          type: string
          nullable: true
        isAvailableOnline:
          type: boolean
          description: Marked as available online in DocDream
        type:
          description: Routine type
          oneOf:
            - $ref: '#/components/schemas/RoutineType'
        description:
          type: string
          nullable: true
        descriptionLanguage1:
          type: string
          nullable: true
        descriptionLanguage2:
          type: string
          nullable: true
        routineGroupId:
          type: integer
          description: Routine group
          format: int32
        preparationDescription:
          type: string
          nullable: true
        preparationDescriptionLanguage1:
          type: string
          nullable: true
        preparationDescriptionLanguage2:
          type: string
          nullable: true
        printInPriceList:
          type: boolean
          description: Print in price list in DocDream
        disableAddingAsStandaloneService:
          type: boolean
          description: Cannot be added to order separately, only can be used within package service
        defaultSpecialityId:
          type: integer
          description: Default speciality routine is associated with. Most useful for consultations.
          format: int32
          nullable: true
        regularRoutineType:
          description: Subtype of Regular (clinic) routine
          nullable: true
          oneOf:
            - $ref: '#/components/schemas/RegularRoutineType'
        encounterLocationType:
          description: Location type for routine. Most often used for remote consultations (Virtual) or home visits (Home).
          nullable: true
          oneOf:
            - $ref: '#/components/schemas/EncounterLocationType'
        durationSingle:
          type: integer
          description: Duration of appointment if routine is the only one
          format: int32
          nullable: true
        durationCombined:
          type: integer
          description: If appointment has several routines, it's duration is Max(Sum(DurationCombined),Max(DurationSingle))
          format: int32
          nullable: true
        isProfile:
          type: boolean
          description: Is profile (composite laboratory test)
          nullable: true
        substanceId:
          type: integer
          description: Substance for laboratory test. null for profiles - determine via components
          format: int32
          nullable: true
        containerId:
          type: integer
          description: Container for laboratory test. null for profiles - determine via components
          format: int32
          nullable: true
        turnAroundTimeHours:
          type: integer
          description: Turn around time (hours) - from sampling to result delivery, as promised to customer
          format: int32
          nullable: true
        intakeRoutineIds:
          type: array
          description: Intake routine ids. For profiles, intakes for all component tests are returned.
          nullable: true
          items:
            type: integer
            format: int32
        labProfileComponents:
          type: array
          description: List of profile components
          nullable: true
          items:
            type: integer
            format: int32
        packageComponents:
          type: array
          description: List of package components
          nullable: true
          items:
            $ref: '#/components/schemas/ComponentApiInfo'
        createdOn:
          type: string
          format: date-time
        updatedOn:
          type: string
          format: date-time
          nullable: true
    RoutineType:
      type: string
      description: ''
      x-enumNames:
        - NotDefined
        - Regular
        - Lab
        - Article
        - Package
        - HealthPlan
      enum:
        - NotDefined
        - Regular
        - Lab
        - Article
        - Package
        - HealthPlan
    RegularRoutineType:
      type: string
      description: ''
      x-enumNames:
        - NotDefined
        - Consultation
        - Examination
        - Treatment
        - Intake
        - Intervention
        - Drug
        - Vaccine
        - Procedure
        - Other
        - HospitalStay
        - Anaesthesia
      enum:
        - NotDefined
        - Consultation
        - Examination
        - Treatment
        - Intake
        - Intervention
        - Drug
        - Vaccine
        - Procedure
        - Other
        - HospitalStay
        - Anaesthesia
    EncounterLocationType:
      type: string
      description: ''
      x-enumNames:
        - NotDefined
        - OnPremises
        - Home
        - Field
        - Virtual
        - BiomaterialTransfer
      enum:
        - NotDefined
        - OnPremises
        - Home
        - Field
        - Virtual
        - BiomaterialTransfer
    ComponentApiInfo:
      type: object
      additionalProperties: false
      properties:
        routineId:
          type: integer
          format: int32
        quantity:
          type: integer
          format: int32
    RoutineGroupApiInfo:
      type: object
      additionalProperties: false
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
          nullable: true
        nameLanguage1:
          type: string
          nullable: true
        nameLanguage2:
          type: string
          nullable: true
        position:
          type: integer
          format: int32
        childGroups:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/RoutineGroupApiInfo'
        topLevelGroupId:
          type: integer
          format: int32
          nullable: true
    UnitApiInfo:
      type: object
      additionalProperties: false
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
          nullable: true
        nameLanguage1:
          type: string
          nullable: true
        nameLanguage2:
          type: string
          nullable: true
        medicalCareType:
          nullable: true
          oneOf:
            - $ref: '#/components/schemas/MedicalCareType'
        address:
          type: string
          nullable: true
        briefAddress:
          type: string
          nullable: true
        licenseInfoForDocuments:
          type: string
          nullable: true
        contactDataForDocuments:
          type: string
          nullable: true
        workingDayStart:
          type: string
          format: duration
        workingDayEnd:
          type: string
          format: duration
        headEmployee:
          nullable: true
          oneOf:
            - $ref: '#/components/schemas/EntityApiInfo'
        email:
          type: string
          nullable: true
        phoneNumber:
          type: string
          nullable: true
        localPhoneNumber:
          type: string
          nullable: true
        patientInformation:
          type: string
          nullable: true
        chiefPhysician:
          type: string
          nullable: true
        allowPlanning:
          type: boolean
    MedicalCareType:
      type: string
      description: ''
      x-enumNames:
        - NotDefined
        - OutPatient
        - InPatient
        - Operations
        - BloodDrawingPoint
      enum:
        - NotDefined
        - OutPatient
        - InPatient
        - Operations
        - BloodDrawingPoint
  securitySchemes:
    Api-Key:
      type: apiKey
      description: Copy DocDream REST API key here
      name: Api-Key
      in: header
security:
  - Api-Key: []
tags:
  - name: Appointments
  - name: Areas
  - name: Dictionaries
  - name: Documents
  - name: Resources
  - name: HealthCareInstitutions
  - name: MedReps
  - name: Orders
  - name: Payments
  - name: Person Accounts
  - name: Person Channels
  - name: Persons
  - name: Person Relations
  - name: Planning
  - name: Referring doctors
  - name: Pricing
  - name: Promotions
  - name: Routines
